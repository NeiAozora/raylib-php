// $Id$
// vim:ft=javascript

ARG_WITH("raylib", "for raylib support", "no");

if (PHP_RAYLIB != "no") {
	raylib_lib_paths = PHP_PHP_BUILD + "\\lib;";
	raylib_include_paths = PHP_PHP_BUILD + "\\include;";

	if (
		//-- Raylib
		CHECK_LIB("raylib.lib", "raylib", PHP_PHP_BUILD + "\\lib") &&
        CHECK_HEADER_ADD_INCLUDE("raylib.h", "CFLAGS_RAYLIB", PHP_PHP_BUILD + "\\include") &&
		//-- GLFW
		CHECK_LIB("glfw3dll.lib", "raylib", PHP_PHP_BUILD + "\\lib") &&
        CHECK_HEADER_ADD_INCLUDE("glfw3.h", "CFLAGS_RAYLIB", PHP_PHP_BUILD + "\\include\\GLFW")
		) {

		ADD_FLAG("LIBS_CLI", "raylib.lib glfw3dll.lib");

		var raylib_sources = "raylib.c raylib-camera3d.c raylib-camera3d.h raylib-camera3d.lo raylib-camera2d.c raylib-camera2d.h raylib-camera2d.lo raylib-cursor.c raylib-cursor.h raylib-cursor.lo raylib-draw.c raylib-image.c raylib-key.c raylib-rendertexture.c raylib-font.c raylib-text.c raylib-texture.c raylib-timming.c raylib-utils.c raylib-window.c raylib-mouse.c raylib-collision.c raylib-color.c";
		PHP_INSTALL_HEADERS("ext/raylib", "php_raylib.h raylib-image.h raylib-window.h raylib-text.h raylib-cursor.h raylib-color.h raylib-texture.h raylib-utils.h");
		EXTENSION("raylib", raylib_sources, true, "/DZEND_ENABLE_STATIC_TSRMLS_CACHE=1", "php" + PHP_VERSION + "raylib.dll");

	} else {
        	WARNING("raylib not enabled; libraries not found");
	}
}

